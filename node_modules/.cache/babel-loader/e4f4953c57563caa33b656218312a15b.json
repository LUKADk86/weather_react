{"ast":null,"code":"var _jsxFileName = \"/home/lounis/Bureau/react/weather-react/src/App.js\";\nimport React from 'react';\nimport Weather from './component/Weather';\nimport Form from './component/Form';\nimport './App.css';\nconst api_key = \"48cb1fef688375d5ef8b6d53040af701\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pays: '',\n      ville: '',\n      temperature: '',\n      description: '',\n      humidite: '',\n      erreur: ''\n    };\n\n    this.getWeather = async e => {\n      const pays = e.target.elements.pays.value;\n      const ville = e.target.elements.ville.value;\n      e.preventDefault();\n      console.log('hello');\n      const api = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(ville, \",\").concat(pays, \"&appid=\").concat(api_key));\n      const data = await api.json();\n      console.log(data);\n      this.setState({\n        pays: data.sys.country,\n        ville: data.main.name,\n        temperature: data.main.temp,\n        description: data.weather[0].description,\n        humidite: data.main.humidity,\n        erreur: ''\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"M\\xE9t\\xE9o du jour\"), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lounis/Bureau/react/weather-react/src/App.js"],"names":["React","Weather","Form","api_key","App","Component","state","pays","ville","temperature","description","humidite","erreur","getWeather","e","target","elements","value","preventDefault","console","log","api","fetch","data","json","setState","sys","country","main","name","temp","weather","humidity","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAE,kCAAf;;AAIA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GAC1B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,WAAW,EAAE,EAHT;AAIJC,MAAAA,WAAW,EAAE,EAJT;AAKJC,MAAAA,QAAQ,EAAE,EALN;AAMJC,MAAAA,MAAM,EAAE;AANJ,KAD0B;;AAAA,SAUhCC,UAVgC,GAUrB,MAAMC,CAAN,IAAU;AACnB,YAAMP,IAAI,GAACO,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAAlC;AACA,YAAMT,KAAK,GAACM,CAAC,CAACC,MAAF,CAASC,QAAT,CAAkBR,KAAlB,CAAwBS,KAApC;AACAH,MAAAA,CAAC,CAACI,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,4DAAqDd,KAArD,cAA8DD,IAA9D,oBAA4EJ,OAA5E,EAAvB;AACA,YAAMoB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,WAAKE,QAAL,CAAc;AACZlB,QAAAA,IAAI,EAAEgB,IAAI,CAACG,GAAL,CAASC,OADH;AAEZnB,QAAAA,KAAK,EAAEe,IAAI,CAACK,IAAL,CAAUC,IAFL;AAGZpB,QAAAA,WAAW,EAAEc,IAAI,CAACK,IAAL,CAAUE,IAHX;AAIZpB,QAAAA,WAAW,EAAEa,IAAI,CAACQ,OAAL,CAAa,CAAb,EAAgBrB,WAJjB;AAKZC,QAAAA,QAAQ,EAAEY,IAAI,CAACK,IAAL,CAAUI,QALR;AAMZpB,QAAAA,MAAM,EAAE;AANI,OAAd;AAQH,KA1BiC;AAAA;;AA2BlCqB,EAAAA,MAAM,GACJ;AACE,WACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKpB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADA;AAQH;;AArCiC;;AAwClC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport Weather from './component/Weather';\nimport Form from './component/Form';\nimport './App.css';\n\nconst api_key= \"48cb1fef688375d5ef8b6d53040af701\";\n\n\n\nclass App extends React.Component {\n  state={\n    pays: '',\n    ville: '',\n    temperature: '',\n    description: '',\n    humidite: '',\n    erreur: ''\n  }\n  \n  getWeather=async(e)=>{\n    const pays=e.target.elements.pays.value\n    const ville=e.target.elements.ville.value\n    e.preventDefault()\n    console.log('hello');\n    const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ville},${pays}&appid=${api_key}`);\n    const data = await api.json()\n    console.log(data)\n    this.setState({\n      pays: data.sys.country,\n      ville: data.main.name,\n      temperature: data.main.temp,\n      description: data.weather[0].description,\n      humidite: data.main.humidity,\n      erreur: ''\n    })\n}\nrender()\n  {\n    return (\n    <div className=\"App\">\n      <h1>Météo du jour</h1>\n      <Form getWeather={this.getWeather}/>\n      <Weather />\n    \n    </div>\n  )\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}